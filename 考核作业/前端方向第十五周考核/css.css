/*清除网页格式，不管有用没用可以都加上*/
* {
  margin: 0;
  padding: 0
}

.carousel {
  margin: 0 auto;
  width: 1440px;
  height: 420px;
  /* vh和vw是视窗单位，需要加定位 */
  position: absolute;
  /* 向下移动视窗高度的50%，再向上移动自身高度的50%，则必然居中。宽度同理 */
  top: 50vh;
  left: 50vw;
  transform: translate(-50%, -50%);
}

.carousel_bg {
  /* 通过不设高度且子元素脱离文档流，让内容(content缩写cont)能够显示在背景图bg上 */
  position: relative;
}

.carousel_bg li {
  list-style: none;
  background-size: cover;
  /* 控制轮播图切换时间 */
  transition: all 2s;
  /* 不透明度为0，即完全透明 */
  opacity: 0;
  /* 设置子绝父相定位，让子元素基于父元素来定位 */
  position: absolute;
}

.carousel_bg li.bg__active {
  width: 1440px;
  height: 420px;
  /* 通过设置当前显示页面不透明而其他页面透明达到幻灯片轮播的效果 */
  opacity: 1;
  /* 通过设置层级，保证位于其他开启定位的元素之下 */
  z-index: -1;
}

.carousel_cont {
  width: 1440px;
  height: 420px;
  /* 这种排列元素的问题都交给弹性盒子，不赘述了 */
  display: flex;
  align-items: flex-start;
  justify-content: space-around;
  flex-direction: column;
  position: absolute;
}

.cont_tittle {
  /* 通过上下边距为0，左右边距自动实现水平居中 */
  margin: 0 auto;
  /* 要放字体文件，懒得找了 演示一下 */
  font-family: 'SourceHanSansCN-Bold';
  font-weight: bold;
  font-size: 34px;
  color: #FFFFFF;
  text-align: center;
  line-height: 34px;
}

.cont_nav {
  width: 1440px;
  height: 35.5px;
  display: flex;
  align-items: center;
  justify-content: space-around;
  flex-direction: column;
}

.cont_nav ul {
  list-style: none;
  display: flex;
  align-items: center;
  justify-content: space-around;
  flex-direction: row;
}

.cont_nav ul li {
  font-family: 'SourceHanSansCN-Regular';
  font-size: 18px;
  line-height: 18px;
  margin-bottom: 4px;
  padding-left: 20px;
  padding-right: 20px;
  height: 34.5px;
  color: #FFFFFF;
  text-align: justify;
  position: relative;
  cursor: pointer;
}

/* 用伪元素::before来做导航栏的下滑线并实现纯CSS下划线跟随，不具备功能。
切换的控制是由JS切换「当前活动li」完成的 */
.cont_nav ul li::before {
  content: "";
  position: absolute;
  z-index: 10;
  top: 0;
  left: 100%;
  width: 0;
  height: 100%;
  border-bottom: 4px solid #D7000F;
  transition: 0.1s all linear;
  margin-left: 20px;
}

/* 奇技淫巧，看看就好 */
.cont_nav ul li:hover::before {
  width: 72px;
  left: 0;
}

.cont_nav ul li:hover~li::before {
  left: 0;
}

.line {
  width: 1000px;
  border: 1px solid #FFFFFF;
  background-color: #FFFFFF;
}

.cont_text {
  width: 10000px;
  height: 162px;
  display: flex;
  flex-direction: row;
  scroll-behavior: smooth;
  overflow: hidden;
  margin-left: 250px;
}

.cont_text li {
  /* 通过设置li宽度为0而活动li存在宽度，再设置过渡效果transition，
  让前一个li宽度渐渐消失同时后一个li慢慢出现，产生滑动切换的视觉效果 */
  width: 0;
  transition: 1s;
  list-style: none;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  /* 通过设置li透明而活动li不透明，让切换的同时前一个li渐渐隐藏 */
  opacity: 0;
}

.cont_text li h3 {
  font-family: 'SourceHanSansCN-Bold';
  font-weight: bold;
  font-size: 28px;
  color: #FFFFFF;
  line-height: 28px;
  width: 120px;
  overflow: hidden;
}

.cont_text li p {
  font-family: 'SourceHanSansCN-Regular';
  font-size: 18px;
  color: #FFFFFF;
  line-height: 26px;
  width: 900px;
  overflow: hidden;
}

.cont_text li .button {
  width: 124px;
  height: 42px;
  background: rgba(216, 216, 216, 0.00);
  border: 1px solid #FFFFFF;
  display: flex;
  align-items: center;
  justify-content: center;
  content: normal;
}

.cont_text li .button p {
  width: auto;
  font-family: 'SourceHanSansCN-Regular';
  font-size: 16px;
  color: #FFFFFF;
  text-align: justify;
  line-height: 16px;
}

/* 活动li，后面带__artive */
.cont_text li.text__active {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  opacity: 1;
  width: 1000px;
}